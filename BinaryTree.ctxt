#BlueJ class context
comment0.target=BinaryTree
comment0.text=\n\ An\ Interface\ for\ a\ binary\ tree\ collection.\n\ \n
comment1.params=
comment1.target=java.lang.Object\ getRootElement()
comment1.text=\n\ Returns\ the\ element\ stored\ in\ the\ root\ of\ the\ tree.\n\ \n\ @return\ the\ element\ stored\ in\ the\ root\ of\ the\ tree.\n
comment10.params=
comment10.target=java.util.Iterator\ inorder()
comment10.text=\n\ Returns\ an\ inorder\ traversal\ on\ the\ binary\ tree.\n\ \n\ @return\ an\ iterator\ containing\ the\ elements\ \n\ of\ this\ tree\ visited\ during\ an\ inorder\ traversal\n
comment11.params=
comment11.target=java.util.Iterator\ postorder()
comment11.text=\n\ Returns\ an\ postorder\ traversal\ on\ the\ binary\ tree.\n@return\ an\ iterator\ containing\ the\ elements\ \n\ of\ this\ tree\ visited\ during\ an\ postorder\ traversal\n
comment12.params=
comment12.target=java.util.Iterator\ levelorder()
comment12.text=\n\ Returns\ a\ level\ order\ traversal\ on\ the\ binary\ tree.\n\ \n\ @return\ an\ iterator\ containing\ the\ elements\ \n\ of\ this\ tree\ visited\ during\ a\ level\ order\ traversal\n
comment2.params=
comment2.target=BinaryTree\ getLeft()
comment2.text=\n\ Returns\ the\ left\ subtree\ of\ the\ tree.\n\ \n\ @return\ the\ left\ subtree\ of\ the\ tree.\n
comment3.params=
comment3.target=BinaryTree\ getRight()
comment3.text=\n\ Returns\ the\ right\ subtree\ of\ the\ root.\n\ \n\ @return\ the\ right\ subtree\ of\ the\ root.\n
comment4.params=target
comment4.target=boolean\ contains(java.lang.Object)
comment4.text=\n\ Returns\ true\ if\ the\ binary\ tree\ contains\ an\ element\ that\n\ matches\ the\ specified\ element\ and\ false\ otherwise.\n\ \n\ @param\ the\ element\ to\ look\ for\ in\ the\ tree\n\ \n\ @return\ true\ if\ the\ binary\ tree\ contains\ the\ specified\ element,\n\ false\ otherwise\n
comment5.params=target
comment5.target=java.lang.Object\ find(java.lang.Object)
comment5.text=\n\ Returns\ the\ element\ in\ the\ tree\ matching\n\ the\ specified\ target.\n\ \n\ @param\ the\ element\ to\ look\ for\ in\ the\ tree\n\ @return\ the\ element\ in\ the\ tree\ matching\n\ the\ specified\ element,\ null\ if\ not\ such\ element\ exists\ \n\ in\ the\ tree\n
comment6.params=
comment6.target=boolean\ isEmpty()
comment6.text=\n\ Returns\ true\ if\ the\ binary\ tree\ contains\ no\ elements,\ and\n\ false\ otherwise.\n\ \n\ @return\ true\ if\ the\ tree\ has\ no\ nodes,\ false\ otherwise\n
comment7.params=
comment7.target=int\ size()
comment7.text=\n\ Returns\ the\ number\ of\ elements\ in\ this\ binary\ tree.\n\ \n\ @return\ the\ number\ of\ elements\ in\ this\ binary\ tree.\n
comment8.params=
comment8.target=java.lang.String\ toString()
comment8.text=\n\ Returns\ a\ string\ representation\ of\ the\ binary\ tree.\n\ \n\ @return\ a\ string\ representation\ of\ the\ binary\ tree.\n
comment9.params=
comment9.target=java.util.Iterator\ preorder()
comment9.text=\n\ Returns\ a\ preorder\ traversal\ on\ the\ binary\ tree.\n\ \n\ @return\ an\ iterator\ containing\ the\ elements\ \n\ of\ this\ tree\ visited\ during\ an\ preorder\ traversal\n
numComments=13
